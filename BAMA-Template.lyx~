#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass book
\begin_preamble
\usepackage{listings}
\usepackage{xcolor} 
\usepackage{babel} 

\definecolor{hellgrau}{rgb}{0.95,0.95,0.95}
\definecolor{colKeys}{rgb}{0,0,1}
\definecolor{colIdentifier}{rgb}{0,0,0}
\definecolor{colComments}{rgb}{1,0,0}
\definecolor{colString}{rgb}{0,0.5,0}

\lstset{
    language=JAVA,
    float=hbp,%
    basicstyle=\ttfamily\small, %
    identifierstyle=\color{colIdentifier}, %
    keywordstyle=\color{colKeys}, %
    stringstyle=\color{colString}, %
    commentstyle=\color{colComments}, %
    columns=flexible, %
    tabsize=2, %
    frame=single, %
    extendedchars=true, %
    showspaces=false, %
    showstringspaces=false, %
    numbers=left, %
    numberstyle=\tiny, %
    breaklines=true, %
    backgroundcolor=\color{hellgrau}, %
    breakautoindent=true, %
    captionpos=b%
}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language american
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans lmss
\font_typewriter default
\font_default_family sfdefault
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command bibtex
\index_command default
\float_placement tbh
\paperfontsize 11
\spacing single
\use_hyperref true
\pdf_bookmarks false
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks true
\pdf_pdfborder true
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle true
\papersize a4paper
\use_geometry true
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2.5cm
\topmargin 2cm
\rightmargin 2cm
\bottommargin 3cm
\secnumdepth 3
\tocdepth 2
\paragraph_separation skip
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
How to write a Bachelor, Master, Diploma Thesis?
\begin_inset Newline newline
\end_inset

Commented Template for Bachelor, Master or Diploma Thesis
\end_layout

\begin_layout Standard
\begin_inset VSpace 5cm
\end_inset


\end_layout

\begin_layout Author
Nane Kratzke (please replace it with your name)
\end_layout

\begin_layout Author
Lübeck University of Applied Sciences
\begin_inset Newline newline
\end_inset

Department of Electrical Engineering and Computer Science
\begin_inset Newline newline
\end_inset

Mönkhofer Weg 239
\begin_inset Newline newline
\end_inset

23562 Lübeck
\begin_inset Newline newline
\end_inset

Germany
\end_layout

\begin_layout Standard
\begin_inset VSpace vfill
\end_inset


\end_layout

\begin_layout Section*
Statement to the diploma thesis
\end_layout

\begin_layout Standard
I assure that I have written the diploma thesis independently, without outside
 help.
\end_layout

\begin_layout Standard
Only the given sources have been used for the writing of the diploma thesis.
 Literally or the sense after taken parts are marked as those.
\end_layout

\begin_layout Standard
I agree that my work is published, in particular that the work is presented
 to third parties for inspection or copies of the work are made to pass
 on to third parties.
\end_layout

\begin_layout Standard
\begin_inset VSpace 3cm
\end_inset


\end_layout

\begin_layout Standard
Lübeck, 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
today
\end_layout

\end_inset


\begin_inset space \hspace{}
\length 6cm
\end_inset

Signature
\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset FloatList figure

\end_inset


\end_layout

\begin_layout Standard
\begin_inset FloatList table

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Chapter
Introduction
\begin_inset CommandInset label
LatexCommand label
name "chap:Introduction"

\end_inset


\end_layout

\begin_layout Standard
This document provides some general advices and requirements which should
 be regarded while writing a bachelor, master or diploma thesis with a clear
 focus on computer science -- especially implementing or programming --
 related topics.
 If you have to deal with a complete other domain maybe the general advices
 of this template are of some interest for you.
 But it is very likely that all aspects described in the chapters 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Literature-Research-and"

\end_inset

 and following are only of minor relevance for you -- especially if you
 have no software specific problem to solve.
\end_layout

\begin_layout Standard
The here mentioned structures, advices and hints are recommendations and
 do not have to be followed word by word in a dogmatic interpretation.
 Each thesis has special aspects making it necessary to differ in minor
 or major aspects from this template.
 Nevertheless all formulated advices of this template shall help you writing
 a well structured, understandable and traceable bachelor, master or diploma
 thesis.
\end_layout

\begin_layout Standard
You should be aware that this template summarizes only some essential aspects
 on technical writing.
 It is recommended to account other sources on technical writing as well,
 e.g.
\end_layout

\begin_layout Itemize
Barrass 
\begin_inset CommandInset citation
LatexCommand cite
key "Barrass91"

\end_inset

 (especially English speaking students) or
\end_layout

\begin_layout Itemize
Rechenberg 
\begin_inset CommandInset citation
LatexCommand cite
key "Rechenberg2006"

\end_inset

 (especially German speaking students).
\end_layout

\begin_layout Standard
This template provides general writing advices in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:General-writing-advices"

\end_inset

 and additional hints how to write an introduction for your thesis document
 (see section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Advices-to-introduce"

\end_inset

).
 
\end_layout

\begin_layout Standard
The following chapters concentrate how to general structure a software intensive
 bachelor, master or diploma thesis.
 Therefor chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Literature-Research-and"

\end_inset

 provides some tips for your initial literature research and requirements
 analysis.
 How to derive and structure a profound system architecture is described
 in chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:System-Architecture"

\end_inset

.
 Chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Software-Architecture-and/or"

\end_inset

 gives advices how to use these system architecture outcomes to derive and
 document your software as well as data architecture.
 The documentation of your detail implementation is covered in chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Implementation-Description"

\end_inset

.
 Chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:{Extensibility}"

\end_inset

 might be of interest for you, if you have to document extensible features
 of your solution.
 You can skip this chapter, if you do not have to deal with extensibility.
 Some hints how to document your test and evaluation efforts can be found
 in chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Test-and-Evaluation"

\end_inset

.
\end_layout

\begin_layout Standard
This template provides finally some additional hints how to summarize your
 work, derive some conclusions of major relevance and provide an outlook
 (if possible) in the last chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Summary,-Conclusions-and-Outlook"

\end_inset

.
\end_layout

\begin_layout Section
General writing advices
\begin_inset CommandInset label
LatexCommand label
name "sec:General-writing-advices"

\end_inset


\end_layout

\begin_layout Standard
Do not forget to write your thesis in parallel to your software modeling,
 programming and testing activities.
 Thesis which are written after the complete modeling, programming and testing
 activities are often hardly readable and understandable.
\end_layout

\begin_layout Standard
Be aware of the following points:
\end_layout

\begin_layout Itemize
With ongoing progress you are becoming more and more an expert within your
 thesis domain.
 Nevertheless your surrounding does not run through your very individual
 learning process.
 So -- at some point -- it is very likely that you assume non basic knowledge
 as basic.
 Think back! If you had this knowledge before you start your thesis it might
 be basic knowledge.
 If not -- it is very likely that this knowledge could be hardly assumed
 basic knowledge.
 If unsure -- assume that it is no basic knowledge.
 Be aware of this common pitfall.
\end_layout

\begin_layout Itemize
You should write your thesis for someone who has no detail knowledge about
 your thesis domain.
 Do not write your thesis for your supervisor.
 You should write it for someone who might want to continue your work (maybe
 another student of the following semester) and needs your knowledge and
 experience but starts to get into touch with your work from a low experience
 level.
\end_layout

\begin_layout Itemize
Your target audience may be computer scientists but it is likely that they
 do not have detail knowledge about your thesis domain.
\end_layout

\begin_layout Itemize
Especially your second supervisor might be no domain expert.
 Keep him oder her in mind while writing.
 But be aware it is very likely that you first get to know your second superviso
r after you have finished writing your thesis.
 This is challenging but also very disciplining for writing.
\end_layout

\begin_layout Itemize
Remember that you write a technical documentation.
 Your style of writing should reflect this.
 Try to write in a formal and professional style you are used to know from
 software or other technical manuals.
 If unsure you should try to copy this style of manual writing (do not copy
 the texts).
 
\end_layout

\begin_layout Itemize
Never write sentences like: 
\begin_inset Quotes eld
\end_inset

I analyzed requirements by applying use case modeling techniques.
\begin_inset Quotes erd
\end_inset

 Write instead: 
\begin_inset Quotes eld
\end_inset

Requirements were analyzed by applying use case modeling techniques.
\begin_inset Quotes erd
\end_inset

 So AVOID 
\begin_inset Quotes eld
\end_inset

I
\begin_inset Quotes erd
\end_inset

 in your thesis.
 You are not writing a diary!
\end_layout

\begin_layout Standard
In the following sections you get some advices regarding the use of typesetting
 systems used in academia (see section 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:A-proper-TeX"

\end_inset

), how to cite and reference (see section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Citing-and-referencing"

\end_inset

), how to structure texts (see section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Text-structuring-advices"

\end_inset

), how to embed and reference tables and figures (section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:How-to-embed"

\end_inset

) and finally how to handle the documentation of source code (see section
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:How-to-handle"

\end_inset

).
\end_layout

\begin_layout Subsection
Use typesetting systems which are common in academia
\begin_inset CommandInset label
LatexCommand label
name "sec:Use-word-processors"

\end_inset


\end_layout

\begin_layout Standard
Typical word processors like MS Word or Open Office are not made for long
 texts with a lot of references, footnotes, tables, figures, etc.
 So sometimes you get into trouble if your texts are getting longer and
 longer as well as your referencing gets more and more complicated.
 This can be very frustrating especially in your last finalizing steps of
 your thesis.
 Nevertheless this is typical for technical documentation and it is typical
 for a thesis document as well.
 So you should think about more professional word processors like LaTeX
 which are very common in the technical and academical domain.
 These tools provide the following features which will make your every day
 live of thesis writing a lot simpler:
\end_layout

\begin_layout Itemize
Reliable image and table handling
\end_layout

\begin_layout Itemize
Reliable list handling (list of figures, tables as well as contents)
\end_layout

\begin_layout Itemize
Reliable cross reference handling
\end_layout

\begin_layout Itemize
Reliable mathematical formula handling
\end_layout

\begin_layout Itemize
Reliable source code handling
\end_layout

\begin_layout Itemize
Reliable footnote handling
\end_layout

\begin_layout Itemize
Reliable cite and bibliography handling
\end_layout

\begin_layout Itemize
Reliable PDF generation
\end_layout

\begin_layout Standard
You are advised (but not forced) to use the following freely available and
 approved TeX toolset.
\end_layout

\begin_layout Itemize
LyX is a graphical front end to LaTeX.
 With LyX a lot of technical details of the very complex LaTeX tool suite
 is hidden.
 You can use LyX almost like an Word processor like MS Word or Open Office.
 Nevertheless it provides all detail features of LaTeX if someone needs
 it.
 LyX runs on Linux/UNIX, Windows or Mac based systems.
\end_layout

\begin_layout Itemize
LaTeX is a document markup language and document preparation system for
 the TeX typesetting program.
 TeX is a popular means by which to typeset complex mathematical formulae
 or complex technical or academical texts; it has been noted as one of the
 most sophisticated digital typographical systems in the world.
 TeX is popular in academia, especially in mathematics, computer science,
 economics, engineering, physics, statistics, and quantitative psychology.
 LaTeX runs on Linux/UNIX, Windows or Mac based systems.
\end_layout

\begin_layout Itemize
BibTeX is a reference management software for formatting lists of references.
 The BibTeX tool is typically used together with the LaTeX document preparation
 system.
 BibTeX makes it easy to cite sources in a consistent manner, by separating
 bibliographic information from the presentation of this information, similarly
 to the separation of content and presentation/style supported by LaTeX
 itself.
 BibTex runs on Linux/UNIX, Windows or Mac based systems.
\end_layout

\begin_layout Itemize
Like LyX for LaTeX there exist a lot of front ends for BibTeX which help
 you to manage your references beyond a text file basis.
 One of the most popular BibTeX front ends JabRef.
 JabRef runs on Linux/UNIX, Windows or Mac systems.
\end_layout

\begin_layout Standard
You find all necessary links for the above mentioned tool suite in the following
 table 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:A-proper-TeX"

\end_inset

 but it is also worth to check 
\family typewriter

\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://www.latex-project.org/
\end_layout

\end_inset


\family default
.
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="left" valignment="top" width="25col%">
<column alignment="left" valignment="top" width="60col%">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Tool
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Description
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Download-URL
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
LyX
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
LaTeX Front End
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://www.lyx.org/Download
\end_layout

\end_inset


\family default
 (Linux/UNIX, Windows, Mac)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
LaTeX
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
TeX based typesetting program (BibTeX is included)
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://www.tug.org/protext/
\end_layout

\end_inset


\family default
 (Windows)
\end_layout

\begin_layout Plain Layout

\family typewriter
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://www.tug.org/mactex/2011/
\end_layout

\end_inset


\family default
 (Mac)
\end_layout

\begin_layout Plain Layout
You should use your package manager of your distribution in order to install
 all necessary LaTeX packages and dependencies.
 Otherwise check 
\family typewriter

\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://www.tug.org/texlive/
\end_layout

\end_inset


\family default
 (Linux/UNIX)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
JabRef
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Java Based Reference Manager for the BibTeX System
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://jabref.sourceforge.net/
\end_layout

\end_inset


\family default
 (Linux/UNIX, Windows, Mac)
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
A proper TeX Tool suite
\begin_inset CommandInset label
LatexCommand label
name "tab:A-proper-TeX"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
If you plan to use the above mentioned tool suite this template file can
 be accessed as a LyX file via GitHub (
\family typewriter

\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://github.com/nkratzke/BAMA-Template
\end_layout

\end_inset


\family default
).
 It should be a reliable starting point for your documentation process.
\end_layout

\begin_layout Subsection
Citing and referencing advices
\begin_inset CommandInset label
LatexCommand label
name "sec:Citing-and-referencing"

\end_inset


\end_layout

\begin_layout Standard
References are important for the reader because references enable to 
\begin_inset Quotes eld
\end_inset

jump
\begin_inset Quotes erd
\end_inset

 between chapters, sections and paragraphs of your thesis document.
 Typically you will develop and describe your solution step by step: Requirement
s, high level architecture, low level architecture, test and evaluation.
 Each of these steps should be described in identifiable elements
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Chapter, section, paragraph, appendix, etc.
\end_layout

\end_inset

 of your thesis document.
 But these elements can not be seen isolated.
 They depend on each other and can not be seen as linear elements.
 To make this obvious for the reader you should use so called forward and
 backward references.
\end_layout

\begin_layout Standard
A forward reference 
\begin_inset Quotes eld
\end_inset

points
\begin_inset Quotes erd
\end_inset

 to a text element which is following the actual text element.
 Forward references are used to provide a look ahead for the reader in order
 to provide him some informations not already mentioned but which might
 be of interest for him.
 Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Example:-How-to-reference"

\end_inset

 shows you how to do this (and this is simultaneously a forward referencing
 example).
\end_layout

\begin_layout Standard
A backward reference 
\begin_inset Quotes eld
\end_inset

points
\begin_inset Quotes erd
\end_inset

 to a text element which stands before the actual paragraph.
 Forward references are used to remind the reader that something has been
 already described in your thesis in order to provide him some summarizing
 facts of these paragraphs which might be of interest for him in order to
 understand the actual paragraph better.
 For (forward as well as backward) referencing it is a good strategy to
 use the referencing features of academical typesetting systems which has
 been already mentioned in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Use-word-processors"

\end_inset

 (and this is simultaneously a backward referencing example).
\end_layout

\begin_layout Standard
So references are used to provide guidance within your own thesis document
 and your own thoughts.
 Nevertheless you have to deal with other form of sources in your thesis.
 You will use books, articles, websites, etc.
 in order to collect and reflect necessary knowledge/facts from other authors
 publications.
 To use their ideas or texts in an unmarked way is called plagiarism and
 will make you fail! It is therefore common academical practice to use their
 publications but mark every idea which originating in other authors publication
s.
 Especially your complete literature research (see chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Literature-Research-and"

\end_inset

) depends on this principle.
\end_layout

\begin_layout Standard
You should distinct cites and quotes.
 A cite is the typical form referencing an external publication and has
 to be enlisted in the bibliography of your thesis.
 We can distinct several forms of citing.
 All of them are shown by example in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Example:-How-to-cite"

\end_inset

.
\end_layout

\begin_layout Itemize
Word by word cites of small length: This is used if you want to repeat another
 authors statement of minor length exactly in the author words.
 If some words are omitted this is marked by using the following sign [...].
 You should provide the page where the cited paragraph can be found.
\end_layout

\begin_layout Itemize
non localizing cite: This is used if you want to refer generally to another
 source where your ideas originate in but it is not possible to localize
 a particular section, page or other identifiable element within this source.
\end_layout

\begin_layout Itemize
localizing cite: This is used if you want to refer specifically to an identifiab
le part of another source where your ideas originate in and it is possible
 and of importance to provide the reader with the necessary information.
 Nevertheless it is not important to reflect the authors ideas word by word.
 You should provide the page where the cited paragraph can be found.
 
\end_layout

\begin_layout Standard
A quote is a special form of a word by word cite of major relevance.
 You use quotes to repeat some statements of another author with major relevance.
 Often only the author is known but it was not published as a book, article,
 etc..
 You should handle quotes with care and use them with caution.
 Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Example:-How-to-quote"

\end_inset

 shows some quoting examples.
 If a quote can not be found in a referenceable publication it has not to
 enlisted in the bibliography of your thesis.
\end_layout

\begin_layout Subsubsection
Example: How to reference between sections
\begin_inset CommandInset label
LatexCommand label
name "sub:Example:-How-to-reference"

\end_inset


\end_layout

\begin_layout Standard
The referencing principle is made obvious by providing an so called outline
 as an example.
 An outline describes the general structure of a document in a summarizing
 and forward referencing way.
 The same works for backward referencing.
 The very idea is not to provide only a chapter, section or subsection number
 but also provide a very compact summary of the (forward or backward) referenced
 passages.
 The outline of this template for example could be the following:
\end_layout

\begin_layout Standard
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
This template provides some general advices for writing diploma thesis in
 chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Introduction"

\end_inset

.
 Chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Literature-Research-and"

\end_inset

 provides some tips for your initial literature research and requirements
 analysis.
 How to derive and structure a profound system architecture is described
 in chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:System-Architecture"

\end_inset

.
 Chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Software-Architecture-and/or"

\end_inset

 gives advices how to use these system architecture outcomes to derive and
 document your software as well as data architecture.
 The documentation of your detail implementation is covered in chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Implementation-Description"

\end_inset

.
 Chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:{Extensibility}"

\end_inset

 might be of interest for you, if you have to document extensible features
 of your solution .
 You can skip this chapter, if you do not have to deal with extensibility.
 Some hints how to document your test and evaluation efforts can be found
 in chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Test-and-Evaluation"

\end_inset

.
\end_layout

\begin_layout Plain Layout
This template provides additional hints how to summarize your work, derive
 some conclusions of major relevance and provide an outlook (if possible)
 in the last chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Summary,-Conclusions-and-Outlook"

\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Example: How to cite
\begin_inset CommandInset label
LatexCommand label
name "sub:Example:-How-to-cite"

\end_inset


\end_layout

\begin_layout Standard
Here is a typical word by word cite example.
 The detailed publication information can be found in the bibliography at
 the very end of this template (and your thesis document) by using the key
 
\begin_inset CommandInset citation
LatexCommand cite
key "Barr2010"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
Barr defines the term 
\begin_inset Quotes eld
\end_inset


\emph on
[...] cloud as a coherent, large-scale, publicly accessible collection of compute,
 storage, and networking resources.
 These are allocated via web service calls (a programmable interface accessed
 via HTTP requests), and are available for short- or long-term use in exchange
 for payment based on actual resources consumed.
\emph default

\begin_inset Quotes erd
\end_inset

 
\begin_inset CommandInset citation
LatexCommand cite
after "p. 5"
key "Barr2010"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Here is a typical non localizing cite.
 The detailed publication information can be found in the bibliography at
 the very end of this template (and your thesis document) by using the key
 
\begin_inset CommandInset citation
LatexCommand cite
key "Barr2010"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status collapsed

\begin_layout Plain Layout
The following considerations rely on Barrs 
\begin_inset CommandInset citation
LatexCommand cite
key "Barr2010"

\end_inset

 description how to use Amazon Web Services cloud assets to host scalable
 web information systems.
 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Here is a typical localizing cite in combination with non localizing cites.
 The detailed publication information can be found in the bibliography at
 the very end of this template (and your thesis document) by using the keys
 
\begin_inset CommandInset citation
LatexCommand cite
key "Barr2010"

\end_inset

, 
\begin_inset CommandInset citation
LatexCommand cite
key "Kratzke2011a"

\end_inset

 and 
\begin_inset CommandInset citation
LatexCommand cite
key "Kratzke2011b"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
Barr mentions beside other use cases training, data storage, disaster recovery
 and business continuity as well as business and scientific data processing
 as economical interesting use cases 
\begin_inset CommandInset citation
LatexCommand cite
after "p. 13 - 18"
key "Barr2010"

\end_inset

.
 This is also reflected by Kratzke 
\begin_inset CommandInset citation
LatexCommand cite
key "Kratzke2011a,Kratzke2011b"

\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Example: How to quote
\begin_inset CommandInset label
LatexCommand label
name "sub:Example:-How-to-quote"

\end_inset


\end_layout

\begin_layout Standard
Quotes should be marked in the following way
\begin_inset Foot
status open

\begin_layout Plain Layout

\family typewriter
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://rescomp.stanford.edu/~cheshire/EinsteinQuotes.html
\end_layout

\end_inset


\end_layout

\end_inset

:
\end_layout

\begin_layout Quote
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Quote

\emph on
"Everything should be made as simple as possible, but not simpler."
\emph default
 
\begin_inset Newline newline
\end_inset

(Albert Einstein)
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Quote

\emph on
"We can't solve problems by using the same kind of thinking we used when
 we created them."
\emph default
 
\begin_inset Newline newline
\end_inset

(Albert Einstein)
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Quote

\emph on
"Any intelligent fool can make things bigger, more complex [...].
 It takes a touch of genius -- and a lot of courage -- to move in the opposite
 direction."
\begin_inset Newline newline
\end_inset


\emph default
 (Albert Einstein)
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Text structuring advices
\begin_inset CommandInset label
LatexCommand label
name "sec:Text-structuring-advices"

\end_inset


\end_layout

\begin_layout Standard
This template provides a general structure of bachelor, master or diploma
 thesis.
 Nevertheless it provides 
\begin_inset Quotes eld
\end_inset

only
\begin_inset Quotes erd
\end_inset

 a top level structure.
 The structure within the here mentioned chapters are up to you.
 That is because every thesis is different in its details, every thesis
 deals with other problems to solve and an appropriate documentation structure
 depends mainly on the given (and thesis individual) problem domain.
 Nevertheless there exist some tips how to structure readable and well structure
d technical documentations.
 Try to keep them in mind.
\end_layout

\begin_layout Itemize

\series bold
Describe only the necessary.

\series default
 Do not write sections because you think the mentioned facts are interesting.
 Every section has to be reasonable from the problem point of view.
 Your personal learning process has seldom something to do with the problem
 domain.
 So avoid to describe your learning process.
 Nobody is interested in that.
\end_layout

\begin_layout Itemize

\series bold
Number your sections hierarchically.

\series default
 You should use the section handling features of an academical typesetting
 system to do this comfortable and frictionless (remember section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Use-word-processors"

\end_inset

 how to do this).
\end_layout

\begin_layout Itemize

\series bold
Introduce sections and subsections if they are appropriate from a problem
 point of view.

\series default
 You should never introduce a section because you think that a heading would
 be 
\begin_inset Quotes eld
\end_inset

good looking
\begin_inset Quotes erd
\end_inset

.
 A heading should always be reasonable from a problem or object description
 point of view.
\end_layout

\begin_layout Itemize

\series bold
Do not over structure your thesis
\series default
 in depth.
 Set you a maximum level of section depth before you start writing.
 A good depth would be three -- for exceptional cases you can use an additional
 fourth section layer.
 Try to keep this level across your complete thesis documentation.
 If you recognize that you need additional section levels in one particular
 chapter it is time to think about a restructure of this chapter or even
 to split this chapter into two or more chapters.
 Maybe you also have to think about to partition your thesis into several
 main parts.
\end_layout

\begin_layout Itemize

\series bold
Do not introduce single subsections.

\series default
 If you introduce only one subsection in a section this subsection is useless!
 Integrate it in your main section.
 When ever you introduce a section 1.x.1 you should have also a section 1.x.2.
 If not -- integrate 1.x.1 with 1.x.
\end_layout

\begin_layout Itemize

\series bold
Align your section structure to the structure of the described object.

\series default
 For example if you introduced a system architecture with five major building
 blocks on the same system level you could introduce five corresponding
 sections to describe them.
 Each section should document exactly one building block.
\end_layout

\begin_layout Itemize

\series bold
Use references to document dependencies
\series default
 between described objects.
 If the described objects have dependencies you should reflect this between
 your corresponding sections as well (see section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Citing-and-referencing"

\end_inset

 how to reference efficiently).
\end_layout

\begin_layout Itemize

\series bold
Provide mini outlines for complex sections.

\series default
 If sections are getting long and complex it is a good strategy to provide
 a starting mini outline reflecting the subsections 1.x.y of the main section
 1.x (remember section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Example:-How-to-reference"

\end_inset

 how to do this).
 
\end_layout

\begin_layout Itemize

\series bold
A headline stands never alone!
\series default
 If you introduces a headline for 1.x which is directly followed by sub-headlines
 1.x.1, 1.x.2, ..., 1.x.n you should think about integrating the section 1.x.1 as introduct
ion for the sections 1.x.2, 1.x.3, ..., 1.x.n into section 1.x.
\end_layout

\begin_layout Itemize

\series bold
Use appendices to handle details.

\series default
 If details are necessary you should describe the general and essential
 in the main document and reference a corresponding appendices section (see
 appendix 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Appendix-I"

\end_inset

).
\end_layout

\begin_layout Subsection
How to embed and reference tables and figures
\begin_inset CommandInset label
LatexCommand label
name "sec:How-to-embed"

\end_inset


\end_layout

\begin_layout Standard
Tables are primarily used for presenting data in a structured way.
 Nevertheless a table should never exist in a text without a reflecting
 context paragraph giving some additional information about the presented
 data.
\end_layout

\begin_layout Standard
Figures are primarily used for presenting data or complex aspects, relations,
 structures, etc.
 in a graphical way.
 A figure should never exist in a text without a reflecting context paragraph
 describing the intent and key information of the figure in words.
 In computer science and software modeling contexts these figures are often
 UML diagrams.
 Nevertheless the here mentioned advices are relevant for all kind of figures
 and diagrams.
\end_layout

\begin_layout Standard
Be aware of the following points:
\end_layout

\begin_layout Itemize
Number tables and figures.
 You should use the in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Use-word-processors"

\end_inset

 mentioned typesetting table and figure handling features to handle this
 automatically and frictionless.
\end_layout

\begin_layout Itemize
Provide list of tables and figures.
 You should use the in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Use-word-processors"

\end_inset

 mentioned typesetting features to handle this automatically and frictionless.
\end_layout

\begin_layout Itemize
Every embedded table or figure should be reflected and referenced from the
 written and surrounding text.
 You should use the in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Use-word-processors"

\end_inset

 mentioned typesetting table and image embedding and referencing features
 to handle this automatically and frictionless.
\end_layout

\begin_layout Itemize
You should embed every table and figure in the same style (e.g.
 all tables and figures left-, right-adjusted or all centered, font-style
 and font-sizes in all tables the same, etc.).
\end_layout

\begin_layout Itemize
If you are using LyX/LaTeX you should embed all tables and figures in a
 floating style (that means the typesetting software decides where to place
 your tables and figures in text, you do not have to care about that).
\end_layout

\begin_layout Itemize
Keep your figures and tables readable.
 Be aware of to small fonts! Whenever possible try to avoid colors in your
 diagrams.
 Your thesis will be printed mostly on a greyscale basis.
\end_layout

\begin_layout Standard
Sections 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Example:-How-to-embed-a-table"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Example:-How-to-embed-a-figure"

\end_inset

 show two examples how to embed and reference tables and figures within
 a text.
\end_layout

\begin_layout Subsubsection
Example: How to embed and reference a table
\begin_inset CommandInset label
LatexCommand label
name "sub:Example:-How-to-embed-a-table"

\end_inset


\end_layout

\begin_layout Standard
Table 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:Grade-scale-of"

\end_inset

 shows the grade scale of the last Object Oriented Programming exam.
 Only two students failed but most of them showed an astonishing good performanc
e.
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="12">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Grade
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
1.0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
1.3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
1.7
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
2.0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
2.3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
2.7
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
3.0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
3.3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
3.7
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
4.0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
5.0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
#
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
9
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Grade scale of last OOP exam
\begin_inset CommandInset label
LatexCommand label
name "tab:Grade-scale-of"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Example: How to embed and reference a figure
\begin_inset CommandInset label
LatexCommand label
name "sub:Example:-How-to-embed-a-figure"

\end_inset


\end_layout

\begin_layout Standard
Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Model-View-Controller"

\end_inset

 shows the general pattern of a Model View Controller (MVC) pattern, which
 is used in software engineering to separate user interface aspects from
 data handling (model) aspects in order to provide well structured as well
 as adaptable code.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename mvc.jpg
	width 66col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Model View Controller Pattern
\begin_inset CommandInset label
LatexCommand label
name "fig:Model-View-Controller"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
How to handle source code
\begin_inset CommandInset label
LatexCommand label
name "sec:How-to-handle"

\end_inset


\end_layout

\begin_layout Standard
You will likely write a lot of code.
 But most of the code will not appear in your thesis document.
 Some crucial parts of your code might be referenced in an appendix or maybe
 in an implementation (see section 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Implementation-Description"

\end_inset

) or test chapter (see section 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Test-and-Evaluation"

\end_inset

) if they are essential for understanding.
 Nevertheless you should embed as less source code as possible in your thesis
 document.
\end_layout

\begin_layout Standard
But if you need to (and you will typically in an implementation intensive
 thesis), you should do this by using special LaTeX packages.
 The LyX template file provided via GitHub
\begin_inset Foot
status open

\begin_layout Plain Layout

\family typewriter
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

https://github.com/nkratzke/BAMA-Template
\end_layout

\end_inset


\end_layout

\end_inset

 embeds the 
\family typewriter
listings
\family default
 package
\begin_inset Foot
status open

\begin_layout Plain Layout
You can find initial documentation here: 
\family typewriter

\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://en.wikibooks.org/wiki/LaTeX/Packages/Listings
\end_layout

\end_inset


\end_layout

\end_inset

 for those purposes and is preconfigured properly.
 You should use it.
\end_layout

\begin_layout Standard
This package provides to embed source code snippets like Listing 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ref{listing}
\end_layout

\end_inset

 in the following style:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstset{language=JAVA,caption={Another Hello World App},label=listing}
\end_layout

\begin_layout Plain Layout


\backslash
begin{lstlisting}
\end_layout

\begin_layout Plain Layout

public class HelloWorld {
\end_layout

\begin_layout Plain Layout

	
\end_layout

\begin_layout Plain Layout

	/**
\end_layout

\begin_layout Plain Layout

	 * This is the main method where all begins
\end_layout

\begin_layout Plain Layout

	 */
\end_layout

\begin_layout Plain Layout

	public static void main(String[] args) {
\end_layout

\begin_layout Plain Layout

		System.out.println("Hello, I got the following parameters:");
\end_layout

\begin_layout Plain Layout

		for(String a : args) {
\end_layout

\begin_layout Plain Layout

			System.out.println(a);
\end_layout

\begin_layout Plain Layout

		}
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout


\backslash
end{lstlisting}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
To use this in LyX you have to open a TeX section and insert the following
 TeX commands:
\end_layout

\begin_layout LyX-Code

\backslash
lstset{language=JAVA,caption={Another Hello World App},label=listing}
\end_layout

\begin_layout LyX-Code

\backslash
begin{lstlisting}
\end_layout

\begin_layout LyX-Code
public class HelloWorld {
\end_layout

\begin_deeper
\begin_layout LyX-Code
/**
\end_layout

\begin_layout LyX-Code
 * This is the main method where all begins
\end_layout

\begin_layout LyX-Code
 */
\end_layout

\begin_layout LyX-Code
public static void main(String[] args) {
\end_layout

\begin_deeper
\begin_layout LyX-Code
System.out.println("Hello, I got the following parameters:");
\end_layout

\begin_layout LyX-Code
for(String a : args) {
\end_layout

\begin_deeper
\begin_layout LyX-Code
System.out.println(a);
\end_layout

\end_deeper
\begin_layout LyX-Code
}
\end_layout

\end_deeper
\begin_layout LyX-Code
}
\end_layout

\end_deeper
\begin_layout LyX-Code
}
\end_layout

\begin_layout LyX-Code

\backslash
end{lstlisting}
\end_layout

\begin_layout Standard
It is also possible to embed complete source code listings by referencing
 the source code file.
 This is shown in appendix 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Appendix-I"

\end_inset

.
\end_layout

\begin_layout Section
Advices to introduce your thesis
\begin_inset CommandInset label
LatexCommand label
name "sec:Advices-to-introduce"

\end_inset


\end_layout

\begin_layout Standard
Within your introduction chapter you should 
\end_layout

\begin_layout Itemize
provide some general information of your problem domain,
\end_layout

\begin_layout Itemize
provide some overview information of your thesis and how your thesis embeds
 in the problem domain overview,
\end_layout

\begin_layout Itemize
describe some innovative aspects or approaches of your work in comparison
 to other publications/solutions in this field,
\end_layout

\begin_layout Itemize
and reflect your thesis task description (or statement of work).
\end_layout

\begin_layout Standard
In alignment with your thesis task description you should finally develop
 an general outline of your thesis document which helps the reader to understand
 the general structure of your thesis.
 Therefore the outline should provide an overview of the ongoing chapters
 of your thesis (see section how to write an efficient outline 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Example:-How-to-reference"

\end_inset

).
 Regard the general text structuring advices in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Text-structuring-advices"

\end_inset

 in order to find an appropriate section structure for the introduction
 chapter.
\end_layout

\begin_layout Standard
Be aware of:
\end_layout

\begin_layout Itemize
Do not provide to much details in the introduction chapter.
\end_layout

\begin_layout Itemize
Do not assume any background knowledge from the reader in the introduction
 chapter.
\end_layout

\begin_layout Itemize
It is very likely that your introduction chapter changes more than ones.
 A good strategy is to write your introduction in the very beginning and
 write it in the finalizing phase completely new!
\end_layout

\begin_layout Standard
	
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout Chapter
Literature Research and Requirements Analysis
\begin_inset CommandInset label
LatexCommand label
name "chap:Literature-Research-and"

\end_inset


\end_layout

\begin_layout Standard
Within this chapter you should reflect your task description as well as
 the state of the art formulated in literature to formulate key aspects
 in order to derive and refine necessary requirements which might be essential
 for the ongoing guidance of your software modeling and implementation steps.
\end_layout

\begin_layout Standard
In some cases it might be useful to separate literature research and requirement
s analysis in two distinct chapters.
 This might be an appropriate strategy for a literature research intensive
 thesis.
 For most bachelor or diploma thesis with a clear software implementation
 focus the provided template structure should be sufficient.
\end_layout

\begin_layout Standard
If you use special requirements engineering techniques like use cases you
 should explain the key concepts of the technique from a general point of
 view (provide references to your sources) and provide reasons why this
 technique is appropriate for your problem.
\end_layout

\begin_layout Standard
Be aware of:
\end_layout

\begin_layout Itemize
You should keep an eye on your references.
\end_layout

\begin_layout Itemize
Do not copy word by word.
 If you do - this might be useful in some cases - mark these parts clearly
 as cites or quotes (check section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Citing-and-referencing"

\end_inset

 how to do that).
\end_layout

\begin_layout Itemize
Use the citing features of the in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Use-word-processors"

\end_inset

 mentioned typesetting systems to handle this automatically and frictionless.
\end_layout

\begin_layout Itemize
Regard the general text structuring advices in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Text-structuring-advices"

\end_inset

 in order to find an appropriate section structure for this chapter.
\end_layout

\begin_layout Itemize
You should align the structure of this section more or less to the statement
 of work of your thesis you have already reflected in chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Introduction"

\end_inset

.
\end_layout

\begin_layout Chapter
System Architecture
\begin_inset CommandInset label
LatexCommand label
name "chap:System-Architecture"

\end_inset


\end_layout

\begin_layout Standard
Within this chapter you should reflect the overall architecture of your
 problem domain and describe it as a general guidance structure to your
 solution.
 This might be the system and its interfaces you have to deal with (provide
 your sources you used to derive the system architecture).
 Or if the system architecture has to be developed you should use this chapter
 to document these steps and their relevant outcomes here.
 In both cases you should align the in chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Literature-Research-and"

\end_inset

 derived requirements to the here presented system architecture.
 Do not forget to mention or develop architecture principles (e.g.
 loose coupling, publish-subscriber pattern, etc.) providing guidance to
 all following software engineering steps.
\end_layout

\begin_layout Standard
Whenever you have made architectural decisions influencing your solution
 you should reflect and document your reasons why you choose solution A
 instead of B or C.
 You should also document your decision criteria in these cases.
 
\end_layout

\begin_layout Standard
If you use special architecture modeling techniques like UML, SysML, etc.
 you should explain the key concepts of these techniques from a general
 point of view (provide references to your sources) and provide reasons
 why this technique is appropriate for your problem and how it fits to your
 used requirements engineering technique presented in chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Literature-Research-and"

\end_inset

.
\end_layout

\begin_layout Standard
If you provide only a/some component(s) to a system/software you should
 use the here presented architecture to depict your part of responsibility
 (components of responsibility).
 It is a good strategy to do this in graphical way.
\end_layout

\begin_layout Standard
Be aware of:
\end_layout

\begin_layout Itemize
You should keep an eye on your references -- especially when deriving your
 system architecture.
\end_layout

\begin_layout Itemize
Do not copy word by word.
 If you do - this might be useful in some cases - mark these parts clearly
 as cites or quotes (check section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Citing-and-referencing"

\end_inset

 how to do that).
\end_layout

\begin_layout Itemize
Use the citing features of the in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Use-word-processors"

\end_inset

 mentioned typesetting systems to handle this automatically and frictionless.
\end_layout

\begin_layout Itemize
Regard the general text structuring advices in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Text-structuring-advices"

\end_inset

 in order to find an appropriate section structure for this chapter.
 Your section structure should be aligned in some way to the structure of
 your top level architecture in order to support readability and understandabili
ty.
\end_layout

\begin_layout Chapter
Software Architecture and/or Software/Data Component Design
\begin_inset CommandInset label
LatexCommand label
name "chap:Software-Architecture-and/or"

\end_inset


\end_layout

\begin_layout Standard
Within this chapter you should reflect the software architecture of your
 components of responsibility (defined in the chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:System-Architecture"

\end_inset

).
 Furthermore you should align the in chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Literature-Research-and"

\end_inset

 derived requirements as well as the architecture principles and your components
 of responsibility (see chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:System-Architecture"

\end_inset

) to the here presented software architecture.
 The detail level depends on your thesis subject.
 It might be necessary to derive detail architectures for very complex component
s.
 It might be also necessary to provide some data models if you have an data
 intensive problem to solve.
\end_layout

\begin_layout Standard
Whenever you have made architectural decisions influencing your solution
 you should reflect and document your reasons why you choose solution A
 instead of B or C.
 You should also document your decision criteria in these cases.
 
\end_layout

\begin_layout Standard
If you use special software or data modeling techniques like UML, ERM, etc.
 you should explain the key concepts of these techniques from a general
 point of view (provide references to your sources) and provide reasons
 why this technique is appropriate for your special component problem and
 how it fits to your used requirements engineering technique (see chapter
 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Literature-Research-and"

\end_inset

) as well as system architecture approach (see chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:System-Architecture"

\end_inset

).
\end_layout

\begin_layout Standard
Be aware of:
\end_layout

\begin_layout Itemize
Regard the general text structuring advices in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Text-structuring-advices"

\end_inset

 in order to find an appropriate section structure for this chapter.
 
\end_layout

\begin_layout Itemize
Your section structure should be aligned in some way to the components of
 responsibility of your top level architecture (see chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:System-Architecture"

\end_inset

) in order to support readability, understandability as well as traceability.
\end_layout

\begin_layout Itemize
Do not provide to detailed models in this section.
 If you need to provide details of crucial relevance you should document
 this in the following chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Implementation-Description"

\end_inset

.
\end_layout

\begin_layout Chapter
Implementation Description
\begin_inset CommandInset label
LatexCommand label
name "chap:Implementation-Description"

\end_inset


\end_layout

\begin_layout Standard
Within this chapter you should reflect the implementation of your components
 of responsibility (defined in the chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:System-Architecture"

\end_inset

) and provide a general overview of your implementation as a general guidance.
 Describe recurring principles of your implementation.
\end_layout

\begin_layout Standard
Whenever you have made implementation decisions influencing your solution,
 performance or your requirements you should reflect and document your reasons
 why you choose solution A instead of B or C.
 You should also document your decision criteria in these cases.
 
\end_layout

\begin_layout Standard
If you use different programming languages like JAVA, Python, C, C++, Haskell,
 PHP, etc.
 you should explain the key programming paradigms of these programing languages
 from a general point of view (provide references to your sources) and provide
 reasons why you used which language for which component.
 You should also describe how do you have handled architecture principles
 on implementation level.
 
\end_layout

\begin_layout Standard
If you use code generation techniques (e.g.
 often GUI Builder use code generators -- it is not always obvious that
 in some aspects code generation is involved!) you should explain the key
 concepts of these techniques and describe how you applied these techniques
 in order to solve your problem.
 You should also reflect which artifacts are generated and whether these
 generated artifacts have to be handled in a special manner -- especially
 when you have to deal with round trip engineering and testing aspects (see
 chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Test-and-Evaluation"

\end_inset

).
\end_layout

\begin_layout Standard
Furthermore you should concentrate in your implementation description on
 very special aspects which are crucial for your solution.
 E.g.
 special algorithms, crucial interfaces, components of high criticality,
 interaction principles, etc.
\end_layout

\begin_layout Standard
Be aware of:
\end_layout

\begin_layout Itemize
Regard the general text structuring advices in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Text-structuring-advices"

\end_inset

 in order to find an appropriate section structure for this chapter.
 
\end_layout

\begin_layout Itemize
Your section structure should be aligned in some way to the components of
 your software architecture (see chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Software-Architecture-and/or"

\end_inset

) in order to support readability, understandability as well as traceability.
\end_layout

\begin_layout Itemize
Do not provide detailed source code in this section.
 If you need to provide source code details of crucial relevance you should
 do this according to section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:How-to-handle"

\end_inset

.
\end_layout

\begin_layout Chapter
{Extensibility}
\begin_inset CommandInset label
LatexCommand label
name "chap:{Extensibility}"

\end_inset


\end_layout

\begin_layout Standard
This chapter is definitely an optional chapter and only necessary if a thesis
 deals with extendable (plugin) software.
 In this case this chapter should reflect how your software is extendable.
 If you do not provide a plugin or a similar concept this chapter can be
 skipped.
\end_layout

\begin_layout Standard
It is a good strategy to identify and describe the relevant extension points
 of your solution and provide some general remarks how your solution can
 be extended.
 
\end_layout

\begin_layout Standard
I a second step you should demonstrate how your solution can be extended
 by a simple example in step by step how-to/tutorial manner.
\end_layout

\begin_layout Standard
Be aware of:
\end_layout

\begin_layout Itemize
Regard the general text structuring advices in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Text-structuring-advices"

\end_inset

 in order to find an appropriate section structure for this chapter.
 
\end_layout

\begin_layout Itemize
Your section structure should be aligned in some way to the identified extension
 points of your solution.
\end_layout

\begin_layout Itemize
Typically you have to provide some source code examples in this section.
 You should do this according to section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:How-to-handle"

\end_inset

.
\end_layout

\begin_layout Chapter
Test and Evaluation
\begin_inset CommandInset label
LatexCommand label
name "chap:Test-and-Evaluation"

\end_inset


\end_layout

\begin_layout Standard
Within this chapter you should reflect your test and evaluation strategy
 and provide corresponding test and evaluation results for your components
 or responsibility in order to prove that you have fulfilled the guiding
 requirements derived in chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Literature-Research-and"

\end_inset

.
\end_layout

\begin_layout Standard
Describe recurring principles of your test and evaluation strategy.
 You should define criteria when you rate a test successful.
 These criteria have to be derived by your requirements (see chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Literature-Research-and"

\end_inset

), the system as well as the software architecture (see chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:System-Architecture"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Software-Architecture-and/or"

\end_inset

).
\end_layout

\begin_layout Standard
Maybe you have to develop a (small) test architecture -- especially when
 you have to deal with test mocks and external interfaces which are not
 belonging to your area of responsibility but are of crucial importance
 for the system.
\end_layout

\begin_layout Standard
If you use special test or evaluation techniques like unit testing, coverage,
 acceptance testing, mocks, etc.
 you should explain the key paradigms of these test and evaluation techniques
 from a general point of view (provide references to your sources) and provide
 reasons why you used which technique for which component/requirement.
 You should also describe how you regarded the architecture influence on
 test level.
 
\end_layout

\begin_layout Standard
If you use code generation techniques (e.g.
 GUI Builder use code generators) you should explain how these generated
 code parts have been tested and why.
\end_layout

\begin_layout Standard
Be aware of:
\end_layout

\begin_layout Itemize
Regard the general text structuring advices in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Text-structuring-advices"

\end_inset

 in order to find an appropriate section structure for this chapter.
 
\end_layout

\begin_layout Itemize
Your section structure should be aligned in some way to 
\end_layout

\begin_deeper
\begin_layout Itemize
your requirements (see chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Literature-Research-and"

\end_inset

),
\end_layout

\begin_layout Itemize
the components of your system (see chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:System-Architecture"

\end_inset

) as well as 
\end_layout

\begin_layout Itemize
components of your responsibility (see chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Software-Architecture-and/or"

\end_inset

) in order to support readability, understandability as well as traceability.
\end_layout

\end_deeper
\begin_layout Itemize
Do not forget your interfaces (between components of your responsibility
 but also between components of your and external responsibility) derivable
 from chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:System-Architecture"

\end_inset

.
 Your test strategy should also provide test results which proof that you
 interact correctly with interfaces that do not belong to your responsibility.
\end_layout

\begin_layout Itemize
Do not provide detailed source code in this section.
 If you need to provide source code details of crucial relevance you should
 do this according to section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:How-to-handle"

\end_inset

.
\end_layout

\begin_layout Chapter
Summary, Conclusions and Outlook
\begin_inset CommandInset label
LatexCommand label
name "chap:Summary,-Conclusions-and-Outlook"

\end_inset


\end_layout

\begin_layout Standard
This is primarily a recapitulating chapter.
 Nevertheless -- beside your introduction chapter -- it is likely that it
 becomes the most read part of your thesis.
 So do not underestimate your 
\begin_inset Quotes eld
\end_inset

finishing
\begin_inset Quotes erd
\end_inset

 chapter.
 It is an absolutely essential chapter of your thesis.
 You should 
\end_layout

\begin_layout Itemize
summarize your major findings of your literature research and results of
 your requirements analysis (see chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Literature-Research-and"

\end_inset

),
\end_layout

\begin_layout Itemize
reflect your overall architecture and guiding architecture principles (see
 chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:System-Architecture"

\end_inset

), 
\end_layout

\begin_layout Itemize
pinpoint highlights and advantages of your software architecture (see chapter
 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Software-Architecture-and/or"

\end_inset

) and your implementation (see chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Implementation-Description"

\end_inset

),
\end_layout

\begin_layout Itemize
describe extension points and principles of your solution in order to summarize
 how your solution can be extended (only if extendable, see chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:{Extensibility}"

\end_inset

),
\end_layout

\begin_layout Itemize
summarize your test/evaluation strategy and your test/evaluation results
 in context of your thesis requirements in order to emphasize your results
 (see chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Test-and-Evaluation"

\end_inset

).
\end_layout

\begin_layout Standard
Finally you should draw some conclusions in order to show what your solution
 is contributing to your problem context.
 If you have developed ideas during your thesis realization which could
 not be realized due to comprehensible or obvious reasons you could state
 them here as an outlook.
\end_layout

\begin_layout Standard
Be aware of:
\end_layout

\begin_layout Itemize
Do not provide to much details in this chapter.
\end_layout

\begin_layout Itemize
Do not assume any background knowledge from the reader (like in the introduction
 chapter).
\end_layout

\begin_layout Itemize
After you have finished you this chapter you should think about a complete
 rework of your introduction chapter in order to get both deeply aligned.
 Remember the introduction and this summary chapter are the most read chapters
 of your thesis.
 They are little bit like a business card of yours.
\end_layout

\begin_layout Standard
And finally: May be you want provide an additional foreword? Or some acknowledgm
ents in own sections? This would give your thesis a personal touch and would
 enable to express your gratitude to persons who had significant intellectual
 impact to your thesis or supported you in a mentionable manner.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{appendix}
\end_layout

\end_inset


\end_layout

\begin_layout Chapter
Detailed Information Example
\begin_inset CommandInset label
LatexCommand label
name "chap:Appendix-I"

\end_inset


\end_layout

\begin_layout Standard
If you want to provide detailed information to some aspects, e.g.
 detailed configuration options.
 You should describe the main and key aspects within your thesis document
 and reference all additional details to an appropriate appendix section.
 So you can keep your text well structured, understandable and readable
 as well as provide all necessary details.
 
\end_layout

\begin_layout Standard
May be you want to embed a long source code like listing 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ref{wrscraces}
\end_layout

\end_inset

 of crucial importance? This could be done in the following style
\end_layout

\begin_layout LyX-Code

\backslash
lstset{caption={WRSC Races - A googlemap drupal module},label=wrscraces}
 
\end_layout

\begin_layout LyX-Code

\backslash
lstinputlisting[language=PHP]{wrscraces.module}
\end_layout

\begin_layout Standard
and would produce the following output:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstset{caption={WRSC Races - A googlemap drupal module},label=wrscraces}
 
\end_layout

\begin_layout Plain Layout


\backslash
lstinputlisting[language=PHP]{wrscraces.module}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{appendix}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "literature"
options "bibtotoc,alpha"

\end_inset


\end_layout

\end_body
\end_document
